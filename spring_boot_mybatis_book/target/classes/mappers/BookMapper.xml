<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
	<mapper namespace="com.spring_boot_mybatis_book.project.dao.IBookDAO">
		<resultMap id="bookResult" type="com.spring_boot_mybatis_book.project.model.BookVO">
			<result property="bookNo" column="bookNo" />
			<result property="bookName" column="bookName" />
			<result property="bookAuthor" column="bookAuthor" />
			<result property="bookPrice" column="bookPrice" />
			<result property="bookDate" column="bookDate" />
			<result property="bookNo" column="bookNo" />
			<result property="pubNo" column="pubNo" />
		</resultMap>
		
		<select id="listAllBook" resultMap="bookResult">
			SELECT * FROM book ORDER BY bookNo;
		</select>
		
		<insert id="insertBook" parameterType="com.spring_boot_mybatis_book.project.model.BookVO">
			INSERT INTO book(bookNo, bookName, bookAuthor, bookPrice, bookDate, bookStock, pubNo)
			VALUES(#{bookNo}, #{bookName}, #{bookAuthor}, #{bookPrice},
						 #{bookDate}, #{bookStock}, #{pubNo})
		</insert>
		
		<!-- 상품 상세 정보 조회 -->
  	<!-- 상품번호(string) 전달 받아서 해당 상품 찾아서 반환(VO) -->
  	<select id="detailViewBook" parameterType="string"
  					resultType="com.spring_boot_mybatis_book.project.model.BookVO">
  		SELECT * FROM book WHERE bookNo = #{bookNo}
  	</select>
  	
  	<!-- 상품 정보 수정: 수정된 데이터 DB에서 update(저장) -->
  	<!-- 주의: 기본키인 상품번호는 수정 안 함 -->
  	<update id="updateBook">
  		UPDATE book SET  bookName=#{bookName}, bookAuthor=#{bookAuthor}, bookPrice=#{bookPrice},
  										 bookDate=#{bookDate}, bookStock=#{bookStock}, pubNo=#{pubNo}
  			WHERE bookNo=#{bookNo}
  	</update>
  	
  	<!--  상품 정보 삭제 -->
  	<!-- 파라미터로 상품번호 전달 받음 -->
  	<delete id="deleteBook" parameterType="string">
  		DELETE FROM book WHERE bookNo=#{bookNo}
  	</delete>
  	
  	<!-- 중복 확인 -->
  	<select id="bookNoCheck" parameterType="string" resultType="string">
  		SELECT bookNo FROM book
  		WHERE bookNo = #{bookNo}
  	</select>
  	
  	<!-- 상품 검색 -->
  	<select id="bookSearch" parameterType="hashmap" resultMap="bookResult">
  		SELECT * FROM book WHERE
  			<choose>
  				<when test="type != null and type.equals('bookName')">
  					bookName LIKE CONCAT('%',#{keyword},'%')
  				</when>
  				<when test="type != null and type.equals('bookAuthor')">
  					bookAuthor LIKE CONCAT('%',#{keyword},'%')
  				</when>
  			</choose>
  	</select>
	</mapper>
	
	
	
	
	
	
	